; Sudoku Boy - A Sudoku game written in Assembly
; 
; Copyright (c) 2010 - Juan Karlo Licudine - AccidentalRebel.com
;
; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
; documentation files (the "Software"), to deal in the Software without restriction, including without limitation 
; the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
; to permit persons to whom the Software is furnished to do so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in all copies or substantial portions 
; of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED 
; TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
; THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION 
; OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
; DEALINGS IN THE SOFTWARE.

				.MODEL COMPACT
				.STACK 64
				.DATA
CURRENTPOS			DW ?, "$"
TROW1				DB 8, "N", 7, "N", 6, "Y", 2, "Y", 3, "Y", 1, "Y", 4, "Y", 5, "N", 9, "N", "$"
TROW2				DB 5, "Y", 4, "N", 2, "Y", 8, "Y", 9, "N", 6, "Y", 3, "Y", 7, "N", 1, "Y", "$"
TROW3				DB 3, "N", 1, "N", 9, "N", 4, "N", 5, "N", 7, "N", 6, "N", 8, "N", 2, "N", "$"
TROW4				DB 4, "Y", 3, "N", 5, "N", 6, "Y", 1, "N", 9, "Y", 7, "N", 2, "N", 8, "Y", "$"
TROW5				DB 7, "N", 9, "Y", 1, "N", 3, "N", 2, "N", 8, "N", 5, "N", 4, "Y", 6, "N", "$"
TROW6				DB 2, "Y", 6, "N", 8, "N", 7, "Y", 4, "N", 5, "Y", 9, "N", 1, "N", 3, "Y", "$"
TROW7				DB 1, "N", 5, "N", 4, "N", 9, "N", 8, "N", 3, "N", 2, "N", 6, "N", 7, "N", "$"
TROW8				DB 6, "Y", 2, "N", 3, "Y", 1, "Y", 7, "N", 4, "Y", 8, "Y", 9, "N", 5, "Y", "$"
TROW9				DB 9, "N", 8, "N", 7, "Y", 5, "Y", 6, "Y", 2, "Y", 1, "Y", 3, "N", 4, "N", "$"
RROW1				DB 8, "N", 7, "Y", 6, "Y", 2, "Y", 3, "Y", 1, "Y", 4, "Y", 5, "Y", 9, "N", "$"
RROW2				DB 5, "Y", 4, "Y", 2, "Y", 8, "Y", 9, "Y", 6, "Y", 3, "Y", 7, "Y", 1, "Y", "$"
RROW3				DB 3, "Y", 1, "Y", 9, "Y", 4, "Y", 5, "Y", 7, "Y", 6, "Y", 8, "Y", 2, "Y", "$"
RROW4				DB 4, "Y", 3, "Y", 5, "Y", 6, "Y", 1, "Y", 9, "Y", 7, "Y", 2, "Y", 8, "Y", "$"
RROW5				DB 7, "Y", 9, "Y", 1, "Y", 3, "Y", 2, "Y", 8, "Y", 5, "Y", 4, "Y", 6, "Y", "$"
RROW6				DB 2, "Y", 6, "Y", 8, "Y", 7, "Y", 4, "Y", 5, "Y", 9, "Y", 1, "Y", 3, "Y", "$"
RROW7				DB 1, "Y", 5, "Y", 4, "Y", 9, "Y", 8, "Y", 3, "Y", 2, "Y", 6, "Y", 7, "Y", "$"
RROW8				DB 6, "Y", 2, "Y", 3, "Y", 1, "Y", 7, "Y", 4, "Y", 8, "Y", 9, "Y", 5, "Y", "$"
RROW9				DB 9, "N", 8, "Y", 7, "Y", 5, "Y", 6, "Y", 2, "Y", 1, "Y", 3, "Y", 4, "N", "$"
ROW1				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW2				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW3				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW4				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW5				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW6				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW7				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW8				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
ROW9				DB ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,"$"
CURSORPOSITION			DW ?, ?, "$"
DIFFICULTY			DB 2, "$"		; 1 = EASY ; 2 = NORMAL ; 3 = HARD
CHOICEDISPLAYALLVALUES		DB 1, "$"		; 1 = DON'T DISPLAY ALL VALUES ; 2 = DISPLAY ALL VALUES
GAMEMODE			DB 1, "$"		; 1 = NORMAL ; 2 = WORDOKU
INCORRECTFLAG			DB 0, "$"		; 0 = NO INCORRECT ANSWERS, 1 = THERE ARE
CANHIGHLIGHT			DB 0, "$"		; 0 = DON'T HIGHLIGHT INCORRECT ANSWERS ; 1 = HIGHLIGHT
MAXRANDOMNUMBER			DB 10, "$"
TXTHELPME			DB "HELP ME!$"
POSHELPME			DW 40, 56, 32, 160, "$"
TXTEASY				DB "EASY$"
POSEASY				DW 40, 56, 32, 160, "$"
TXTNEXTPUZZLE			DB "NEXT PUZZLE$"
POSNEXTPUZZLE			DW 40, 56, 488, 616, "$"
TXTGIVEUP			DB "GIVE UP!$"
POSGIVEUP			DW 64, 80, 32, 160, "$"
TXTMEDIUM			DB "MEDIUM$"
POSMEDIUM			DW 64, 80, 32, 160, "$"
TXTPREVPUZZLE			DB "PREV PUZZLE$"
POSPREVPUZZLE			DW 64, 80, 488, 616, "$"
TXTRESET			DB "RESET!$"
POSRESET			DW 96, 104, 32, 160, "$"
TXTHARD				DB "HARD$"
POSHARD				DW 80, 104, 32, 160, "$"
TXTUSEPUZZLE			DB "USE PUZZLE$"
POSUSEPUZZLE			DW 104, 120, 488, 616, "$"
TXTNEWPUZZLE			DB "NEW PUZZLE$"
POSNEWPUZZLE			DW 120, 136, 32, 160, "$"
TXTHIGHSCORES			DB "HIGHSCORES$"
POSHIGHSCORES			DW 120, 136, 32, 160, "$"
TXTSELECTPUZZLE			DB "SELECT PUZZLE$"
POSSELECTPUZZLE			DW 120, 136, 32, 160, "$"
TXTMAINMENU			DB "MAIN MENU$"
POSMAINMENU			DW 144, 160, 32, 160, "$"	; TOPMOSTPART, BOTTOMMOST PART, LEFTMOST PART, RIGHTMOST PART
POSPLAYAREA			DW 40, 168, 264, 392, "$"
TXTSUDOKUBOYSAYS		DB "SUDOKUBOY", 205, "SAYS$"
CANENDPROG			DB 0, "$"			; 0 = FALSE, 1 = TRUE
TIMESTARTED			DB ?,?,?,"$"
TIMEFINISHED			DB ?,?,?,"$"
TIMETOTAL			DB ?,?,?,"$"
MSGTIMESTARTED			DB "TIME STARTED$"
MSGTIMEFINISHED			DB "TIME FINISHED$"
MSGTOTALTIME			DB "TOTAL TIME$"
MSGCONGRATULATIONS		DB "CONGRATULATIONS!$"
MSGCONGRATULATIONS2		DB "YOU HAVE COMPLETED THE PUZZLE!$"
MSGPUZZLENUMBER			DB "PUZZLE #: $"
MSGPUZZLELIST			DB "PUZZLE LIST$"
MSGPUZZLELISTEASY		DB "1-32 = EASY$"
MSGPUZZLELISTMED		DB "33-65 = MEDIUM$"
MSGPUZZLELISTHARD		DB "66-99 = HARD$"
NUMOFBYTES 			equ 343
OPENERROR 			DB "AN ERROR HAS OCCURED (OPENING)!$"
READERROR 			DB "AN ERROR HAS OCCURED (READING)!$"
MSGENTERINITIALS		DB "ENTER YOUR INITIALS$"
HANDLE1 			dw ?
HANDLE2				DW ?
BUFFER 				db 343 DUP (?), "$"
BUFFERHS			db 343 DUP (?), "$"
HIGHSCOREFILENAME		DB "DATA\HS.SUD", 0
FILENAME			DB "DATA\", ?, ?, ".ANS", 0
FILENUMBER			DB 30H, 31H, "$"
HSPOS1				DB "??????", "$"
HSPOS2				DB "??????", "$"
HSPOS3				DB "??????", "$"
HSPOS4				DB "??????", "$"
HSPOS5				DB "??????", "$"
HSPOS6				DB "??????", "$"
HSPOS7				DB "??????", "$"
HSPOS8				DB "??????", "$"
HSPOS9				DB "??????", "$"
HSPOS10				DB "??????", "$"
HSTEMP1				DB "??????", "$"
HSTEMP2				DB "??????", "$"
NODATAPRESENT			DB "SUD - 00:00:00$"
LETTERS				DB 219,219,219,219,219,"$"
LETTERS1			DB 219,"   ",219,"$"
LETTERS2			DB 219,"    $"
LETTERS3			DB 219,219,219,219,219,"$"
LETTERS4			DB "    ",219,"$"
LETTERS5 			DB 219,"   ",219,"$"
LETTERS6			DB 219,219,219,219,219,"$"

LETTERU				DB 219,"   ",219,"$"
LETTERU1			DB 219,219,219,219,219,"$"

LETTERD				DB 219,219,219,219," $"
LETTERD1			DB 219,"   ",219,"$"

LETTERO				DB " ",219,219,219," $"
LETTERO1			DB 219,"   ",219,"$"

LETTERK				DB 219,"   ",219,"$"
LETTERK1			DB 219,"  ",219," $"
LETTERK2			DB 219," ",219,"  $"
LETTERK3			DB 219,219,"   $"
LETTERK4			DB 219," ",219,"  $"
LETTERK5 			DB 219,"  ",219," $"
LETTERK6			DB 219,"   ",219,"$"

MSGCHOOSE 			DB "HI! I'M$"
MSGWISELY 			DB "SUDOKUBOY!$"
MSGNORMMODE 			DB "NORMAL SUDOKU$"
MSGWORDOKU			DB "WORDOKU$"
MSGQUIZDOKU			DB "QUIZDOKU$"
MSGMERGEDOKU 			DB "MERGEDOKU$"
MSGEXIT				DB "EXIT GAME$"
MSGHALLOFFAME			DB "HALL OF FAME$"

POSENORMAL			DW 104, 120, 264, 392, "$"
POSEWORDOKU			DW 128, 144, 264, 392, "$"
POSEHALLOFFAME			DW 152, 168, 264, 392,"$"
POSEMERGEDOKU			DW 104, 120, 440, 536, "$"
POSEQUIZDOKU			DW 128, 144, 440, 536, "$"
POSEEXIT			DW 152, 168, 440, 536,"$"

SUDMSG1				DB "/GOODLUCK TO /YOU, PAL ;D / / /YOU'LL NEED /IT! HEHE  ", "$"
SUDMSG2				DB " /HMM.../I WONDER/WHAT NUMBER/SHOULD GO/IN THIS/SPOT?   ", "$"
SUDMSG3				DB " /WAIT/ARE YOU/SURE ABOUT/THAT ONE?/ /THINK ABOUT/IT VERY/CAREFULLY$"
SUDMSG4				DB " /HA!! /I THOUGHT/SO!/ / /THE CORRECT/ANSWER IS/INFINITY/HEHE$"
SUDMSG5				DB " /YOU SEEM/CONFIDENT/ABOUT YOUR/ANSWER./ /LET'S HOPE/IT'S/CORRECT$"
SUDMSG6				DB " /OKAY, I'LL /HELP YOU./ /YOU OWE ME/A PANCIT/CANTON!$"
SUDMSG7 			DB " /SIGH.../IT LOOKS LIKE/YOU ARE NOT/AS GOOD AS I/THOUGHT YOU/ARE. :C$"
SUDMSG8				DB " /HAHAHA!/AM I/BOTHERING/YOU SO MUCH/THAT YOU/COULD NOT/CONCENTRATE?$"
SUDMSG9				DB " / /YOU MISSED/THE BOX./ /TRY CLICKING/AGAIN$"
SUDMSG10			DB " /THESE ARE/THE PEOPLE/WHO HAVE/THE BEST/TIMES FOR/THIS PUZZLE$"

MSGHIGHSCOREFOR			DB "HIGHSCORES FOR PUZZLE #: $"

				.CODE
MAIN 				PROC
					MOV AX, @DATA
					MOV DS, AX
					
					XOR AX, AX	; RESET MOUSE
					INT 33H
					
					MOV AX, 01	; SHOW MOUSE
					INT 33H

					MOV AX, 0B800H	; SETS VIDEO MEMORY MODE	
					MOV ES, AX

					MOV CHOICEDISPLAYALLVALUES, 1
					CALL CLRSCR
					CALL DRAWALLMAINMENU
					;CALL HIGHSCORESPAGE
	LOOPPROG:				
					CALL MOUSEFUNCTIONMAINMENU				
					
					MOV AL, [CANENDPROG]
					CMP AL, 1
					JE ENDMAINPROGRAM
					
					JMP LOOPPROG					
	ENDMAINPROGRAM:	
					; CALL PUZZLESELECTIONSCREEN
					CALL CLRSCR					
					MOV AH, 4CH
					INT 21H
					
MAIN				ENDP

HIGHSCORESPAGE			PROC
					CALL GETHIGHSCORES
					CALL DRAWALLHS
					
	LOOPPROGHS:				
					CALL MOUSEFUNCTIONHS			
					
					MOV AL, [CANENDPROG]
					CMP AL, 1
					JE ENDHSPROGRAM
					
					JMP LOOPPROGHS					
	ENDHSPROGRAM:	
					; CALL PUZZLESELECTIONSCREEN
					CALL CLRSCR					
					MOV AH, 4CH
					INT 21H
					
HIGHSCORESPAGE			ENDP

DRAWALLHS			PROC
					CALL CLRSCR
					
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 03FH
					MOV CX, 2000
					INT 10H
					
					MOV DH, 0
					MOV DL, 24
					MOV CX, 25
	LOOPDRAWBGHIGHSCORES:
					PUSH CX
					CALL GOTOXY
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 00FH
					MOV CX, 35
					INT 10H
					POP CX
					INC DH
					LOOP LOOPDRAWBGHIGHSCORES
					MOV SI, OFFSET SUDMSG10
					CALL SUDOKUBOYSPEAK					
					CALL DRAWSUDOKUBOYSECTION
					CALL DISPLAYHIGHSCORES
					CALL DRAWBUTTONSHS

					XOR DX, DX
					CALL GOTOXY
					
					RET
DRAWALLHS			ENDP

DRAWBUTTONSHS			PROC
					; DRAWS MAINMENU BUTTON
					MOV DH, 18
					MOV DL, 4
					CALL GOTOXY
					
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 4
					MOV SI, OFFSET TXTMAINMENU
					MOV BL, 3FH
					CALL DRAWTEXT
					
					SUB DH, 4
					MOV DL, 4
					CALL GOTOXY
					
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 2
					MOV SI, OFFSET TXTSELECTPUZZLE
					MOV BL, 3FH
					CALL DRAWTEXT
					
					RET
DRAWBUTTONSHS			ENDP

DISPLAYHIGHSCORES		PROC
					MOV DH, 5
					MOV DL, 28
					CALL GOTOXY
					
					MOV SI, OFFSET MSGHIGHSCOREFOR
					MOV BL, 0EH
					CALL DRAWTEXT
					
					MOV DH, 5
					MOV DL, 53
					
					MOV SI, OFFSET FILENUMBER
					MOV BL, 0EH
					CALL DRAWTEXT
					
					MOV DH, 8
					MOV DL, 32
					CALL GOTOXY					
					MOV DL, 31H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS1
					CALL DISPLAYDETAILS					
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 32H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS2
					CALL DISPLAYDETAILS					
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 33H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS3
					CALL DISPLAYDETAILS	
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 34H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS4
					CALL DISPLAYDETAILS	
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 35H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS5
					CALL DISPLAYDETAILS	
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 36H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS6
					CALL DISPLAYDETAILS	
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 37H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS7
					CALL DISPLAYDETAILS	
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 38H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS8
					CALL DISPLAYDETAILS	
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 39H
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS9
					CALL DISPLAYDETAILS	
					
					ADD DH, 1
					MOV DL, 32
					CALL GOTOXY
					MOV DL, 3AH
					MOV AH, 02
					INT 21H					
					MOV SI, OFFSET HSPOS10
					CALL DISPLAYDETAILS	
					
					RET
DISPLAYHIGHSCORES		ENDP

DISPLAYDETAILS			PROC
					CALL DRAWDASH
					
					MOV DL, [SI]
					MOV AH, 2
					INT 21H
					INC SI
					MOV DL, [SI]
					MOV AH, 2
					INT 21H
					INC SI
					MOV DL, [SI]
					MOV AH, 2
					INT 21H
					CALL DRAWDASH
					INC SI
					
					CALL CONVERTTOHEX					
					MOV AH, 02
					MOV DL, CH
					INT 21H					
					MOV AH, 2
					MOV DL, CL
					INT 21H
					MOV AH, 02
					MOV DL, 3AH
					INT 21H
					
					INC SI					
					CALL CONVERTTOHEX					
					MOV AH, 02
					MOV DL, CH
					INT 21H					
					MOV AH, 2
					MOV DL, CL
					INT 21H
					MOV AH, 02
					MOV DL, 3AH
					INT 21H
					
					INC SI					
					CALL CONVERTTOHEX					
					MOV AH, 02
					MOV DL, CH
					INT 21H					
					MOV AH, 2
					MOV DL, CL
					INT 21H
					JMP ENDDISPLAYDETAILS
					
	ENDDISPLAYDETAILS:
					
					RET
DISPLAYdETAILS			ENDP

CONVERTTOHEX			PROC
					; CONVERTS A DECIMAL TO HEXADECIMAL
					; RETURNS CH = 2ND DIGIT, CL = 1ST DIGIT
					
					MOV AL, [SI]
					CMP AL, "?"				; IF NO dATA IS FOUND
					JE NODATAFOUND
					
					XOR CX, CX
					MOV AL, [SI]
					CMP AL, 50
					JGE MAKE50
					CMP AL, 40
					JGE MAKE40
					CMP AL, 30
					JGE MAKE30
					CMP AL, 20
					JGE MAKE20
					CMP AL, 10
					JGE MAKE10
					JMP ONLYSINGLEDIGIT
	MAKE50:
					SUB AL, 50
					MOV CH, 35H
					JMP ENDCONVERTHEX
	MAKE40:
					SUB AL, 40
					MOV CH, 34H
					JMP ENDCONVERTHEX
	MAKE30:
					SUB AL, 30
					MOV CH, 33H
					JMP ENDCONVERTHEX
	MAKE20:
					SUB AL, 20
					MOV CH, 32H
					JMP ENDCONVERTHEX
	MAKE10:
					SUB AL, 10
					MOV CH, 31H
					JMP ENDCONVERTHEX
	ONLYSINGLEDIGIT:
					MOV CH, 30H
					JMP ENDCONVERTHEX
	NODATAFOUND:
					MOV CH, "?"
					MOV CL, "?"
					RET
	ENDCONVERTHEX:					
					ADD AL, 30H
					MOV CL, AL
					RET
CONVERTTOHEX			ENDP

DRAWDASH			PROC
					MOV DL, 20H
					MOV AH, 02
					INT 21H
					
					MOV DL, 2DH
					MOV AH, 02
					INT 21H
					
					MOV DL, 20H
					MOV AH, 02
					INT 21H
					RET
DRAWDASH			ENDP

GETHIGHSCORES			PROC
					CALL CHANGEFILENAME										
					CALL OPENANSWERSHEET										
					CALL COPYHIGHSCORES					
					RET
GETHIGHSCORES			ENDP

RESETHSCONTENT			PROC
					MOV DI, OFFSET HSPOS1
					MOV CX, 9
	POS1:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS1
					
					MOV DI, OFFSET HSPOS2
					MOV CX, 9
	POS2:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS2
					
					MOV DI, OFFSET HSPOS3
					MOV CX, 9
	POS3:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS3
					
					MOV DI, OFFSET HSPOS4
					MOV CX, 9
	POS4:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS4
					
					MOV DI, OFFSET HSPOS5
					MOV CX, 9
	POS5:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS5
					
					MOV DI, OFFSET HSPOS6
					MOV CX, 9
	POS6:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS6
					
					MOV DI, OFFSET HSPOS7
					MOV CX, 9
	POS7:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS7
					
					MOV DI, OFFSET HSPOS8
					MOV CX, 9
	POS8:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS8
					
					MOV DI, OFFSET HSPOS9
					MOV CX, 9
	POS9:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS9
					
					MOV DI, OFFSET HSPOS10
					MOV CX, 9
	POS10:
					MOV AL, "?"
					MOV [DI], AL
					INC DI
					LOOP POS10
					
					
					RET
RESETHSCONTENT			ENDP

COPYHIGHSCORES			PROC
					CALL RESETHSCONTENT
	GOSTARTCOPYHS:
					INC SI
					; SI IS TAKEN FROM OPENASNWERSHEET PROCEDURE
					MOV DI, OFFSET HSPOS1
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS2
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS3
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS4
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS5
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS6
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS7
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS8
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS9
					CALL COPYHSENTRY
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDCOPYROW
					MOV DI, OFFSET HSPOS10
					CALL COPYHSENTRY
	SKIPCOPYHSBUF:
					JMP SKIPCOPYHS
	ENDCOPYROW:
					
					RET
	
COPYHIGHSCORES			ENDP

COPYHSENTRY			PROC
					MOV AL, [SI]
					CMP AL, "$"
					JE SKIPCOPYHS
					MOV CX, 3
	LOOPCOPYNAME:
					MOV AL, [SI]
					MOV [DI], AL
					INC SI
					INC DI					
					LOOP LOOPCOPYNAME	
					CALL CONVERTTODEC
					MOV [DI], AL
					INC SI
					INC DI
					CALL CONVERTTODEC
					MOV [DI], AL
					INC SI
					INC DI
					CALL CONVERTTODEC
					MOV [DI], AL
					INC SI
	SKIPCOPYHS:	
					
	
					RET
COPYHSENTRY			ENDP	

CONVERTTODEC			PROC
					; PRODUCES THE DECIMAL AL
					MOV AL, [SI]
					XOR DX, DX
					XOR AH, AH
					SUB AL, 30H
					MOV BL, 10
					MUL BL
					MOV CL, AL
					INC SI
					MOV AL, [SI]
					XOR DX, DX
					XOR AH, AH
					SUB AL, 30H
					ADD AL, CL
					RET
CONVERTTODEC			ENDP

LPROW				PROC
					XOR CX, CX
					MOV CX, 9
	LPROWS:
					MOV AL, [SI]					
					MOV [DI], AL
					INC SI
					INC DI
					LOOP LPROWS
					INC SI
					RET
LPROW				ENDP

PUZZLESELECTIONSCREEN		PROC
					MOV CHOICEDISPLAYALLVALUES, 1
					CALL CLRSCR
					CALL DRAWBACKGROUND				

					CALL CHANGEFILENAME										
					CALL OPENANSWERSHEET
					
					CALL DRAWALLPUZZLESELECTION

	PUZZLESELECTIONLOOP:
					CALL MOUSEFUNCTIONPUZZLESELECTION
					;MOV AH, 7
					;INT 21H
					MOV AL, [CANENDPROG]
					CMP AL, 1
					JE ENDPROGPUZZLESELECTION
					
					JMP PUZZLESELECTIONLOOP				
	ENDPROGPUZZLESELECTION:				
					CALL CLRSCR
	
					MOV AX, 4C00H			; RETURN TO DOS
					INT 21H
				
					MOV AH, 7
					INT 21H
					
					RET
PUZZLESELECTIONSCREEN		ENDP

CHANGEFILENAME			PROC
					MOV DI, OFFSET FILENAME
					MOV SI, OFFSET FILENUMBER
					ADD DI, 5
													
					MOV AL, [SI]
					MOV [DI], AL
					INC SI
					INC DI
					MOV AL, [SI]
					MOV [DI], AL
										
					RET
CHANGEFILENAME			ENDP

OPENANSWERSHEET			PROC
					MOV DX, OFFSET FILENAME 	; PUT OFFSET OF FILENAME IN DX
					MOV AL,00H			; ACCESS MODE -READ
					MOV AH,3DH			; FUNCTION 3DH - OPEN A FILE
					INT 21H				; CALL DOS SERVICE
		
					MOV HANDLE1,AX			; HANDLE OR ERR CODE
					jnc lol
					Jmp ERROROPENING		; JUMP IF CARRY FLAG SET - ERROR!	
		
	lol:
					xor dx,dx
					mov ah, 3fh			; read file
					mov bx,handle1			;save handle
					mov cx,numofbytes		; num of bytes
					lea dx,buffer  
					int 21h
					jnc lol2
					Jmp ERROROPENING		;JUMP IF CARRY FLAG SET - ERROR!
	lol2:	
					cmp ax,0
					je exitclosehandle1
		
	exitclosehandle1:
		
					mov ah,3eh			;close file
					mov bx,handle1
					int 21h
		
					;mov ah,09
					;mov di,offset buffer
					;int 21h
					
					xor di,di
					xor si,si
					xor ax,ax
					mov si, offset buffer
					mov di, offset row1
					
	copy1: 	
			
					call divide
							
	go1: 	
					
					
					xor di,di
					mov di,offset row2
					call divide
					
					
	go2:	
					
					xor di,di
					mov di,offset row3
					call divide

	go3: 	
					xor di,di
					mov di,offset row4
					call divide

	go4:
					xor di,di
					mov di,offset row5
					call divide
				
	go5:	
				
					xor di,di
					mov di,offset row6
					call divide

	go6:	
					
					xor di,di
					mov di,offset row7
					call divide
					
	go7:	
					xor di,di
					mov di,offset row8
					call divide
					
	go8: 	
					xor di,di
					mov di,offset row9
					call divide
					
					JMP ENDOPENANSWERSHEET
	
	ERROROPENING:
	
					MOV DX,OFFSET OPENERROR		; DISPLAY AN ERROR
					MOV AH,09H			; USING FUNCTION 9H
					INT 21H				; CALL DOS SERVICE
					MOV AX,4C01H			; END PROGRAM WITH AN ERRORLEVEL=1
					INT 21H
		
	ERRORREADING:
					MOV DX, OFFSET READERROR 	; DISPLAY AN ERROR
					MOV AH,09H			; USING FUNCTION 09H
					INT 21H 			; CALL DOS SERVICE
					MOV AX,4C02H			; END PROGRAM WITH AN ERRORLEVEL=2
					INT 21H	
	go9:
	ENDOPENANSWERSHEET:
					DEC SI
					MOV DL, [SI]
					MOV AH, 2
					INT 21H

					RET
OPENANSWERSHEET			ENDP

divide 				proc
					MOV CX, 18
	copyme: 						
					mov al,[si]
					CMP AL, "n"
					JE SKIPCOPY
					CMP AL, "y"
					JE SKIPCOPY
					SUB AL, 30H
	SKIPCOPY:
					mov [di],al
					inc si
					inc di
					
					LOOP copyme
	goout:
					INC SI
					ret
	
divide				endp

getques 			proc	
	copyme1: 	
		
					mov ah,[Si] 	; si=buffer di=row
					cmp ah,'&'
					je enddivide1
					inc si
					inc si
					inc di
					mov al,[si]
					mov [di],al
		
					jmp copyme1
	
	enddivide1:	
	ret
getques 			endp

MAINGAME			PROC
					; THIS IS THE PAGE FOR THE MAIN GAME. ALL THAT APPEARS IN THE ACTUAL GAME ARE HERE.
					CALL CLRSCR
					CALL DRAWALLGAME
					CALL DRAWSTARTTIME
					MOV SI, OFFSET SUDMSG1
					CALL SUDOKUBOYSPEAK
					
					XOR BX, BX
					MOV BX, 866
					MOV AL, 41H				; TEST ONLY, PRINTS USING VIDEO MEMORY MAP
					MOV AH, 0F0H
					;MOV ES:[BX], AX
					
					MOV BX, 1186				; ANOTHER TEST
					MOV AL, 41H
					;MOV ES:[BX], AL
					
	MAINLOOP:
					CALL MOUSEFUNCTIONGAME
					;MOV AH, 7
					;INT 21H
					MOV AL, [CANENDPROG]
					CMP AL, 1
					JE ENDPROG
					
					JMP MAINLOOP				
	ENDPROG:				
					CALL CLRSCR
	
					MOV AX, 4C00H				; RETURN TO DOS
					INT 21H

MAINGAME			ENDP

COMPLETIONPAGE			PROC
					; THIS IS THE COMPLETION PAGE. THIS SHOWS UP WHEN THE PLAYER COMPLETELY SOLVES THE PUZZLE.
					MOV DI, OFFSET TIMEFINISHED
					CALL GETTIME
					CALL COMPUTETOTALTIME

					CALL DRAWCOMPLETIONPAGEBG
					CALL DRAWTIMES
					CALL ASKFORINITIALS					
					
COMPLETIONPAGE			ENDP		

ASKFORINITIALS			PROC
					MOV DH, 16
					MOV DL, 32
					CALL GOTOXY
					
					MOV SI, OFFSET MSGENTERINITIALS
					MOV BL, 0F5H
					CALL DRAWTEXT
					
					MOV DH, 18
					MOV DL, 39
					CALL GOTOXY
					
					MOV AH, 02
					MOV DL, 177
					INT 21H
					MOV AH, 02
					MOV DL, 32
					INT 21H
					MOV AH, 02
					MOV DL, 177
					INT 21H
					MOV AH, 02
					MOV DL, 32
					INT 21H
					MOV AH, 02
					MOV DL, 177
					INT 21H
					
					MOV DH, 18
					MOV DL, 39
					CALL GOTOXY
					
					MOV DI, OFFSET HSTEMP1
					MOV AH, 01
					INT 21H
					MOV [DI], AL					
					
					MOV AH, 02
					MOV DL, 32
					INT 21H				
					
					RET
ASKFORINITIALS			ENDP

DRAWCOMPLETIONPAGEBG		PROC
					; THIS JUST DRAWS THE BACKGROUND FOR THE COMPLETION PAGE AS WELL AS SOME OF THE TEXT.
					MOV DH, 5
					MOV DL, 15
					CALL GOTOXY
					MOV CX, 16
	REPEATCPBG:
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 05FH
					PUSH CX
					MOV CX, 55
					INT 10H
					POP CX
					INC DH
					CALL GOTOXY
					LOOP REPEATCPBG
					
					MOV DH, 6
					MOV DL, 35
					CALL GOTOXY
					
					MOV AH, 9
					MOV DX, OFFSET MSGCONGRATULATIONS
					INT 21H
					
					MOV DH, 7
					MOV DL, 27
					CALL GOTOXY
					MOV AH, 9
					MOV DX, OFFSET MSGCONGRATULATIONS2
					INT 21H					
					
					RET
DRAWCOMPLETIONPAGEBG		ENDP

DRAWTIMES			PROC
					; THIS JUST OUTPUTS THE TIMES IN THE COMPLETION PAGE, COMPLETE WITH LABELS
					MOV DH, 10
					MOV DL, 29
					CALL GOTOXY
					
					
					MOV DX, OFFSET MSGTIMEFINISHED
					MOV AH, 9
					INT 21H
					
					MOV DL, 3AH
					MOV AH, 2
					INT 21H	
					
					MOV SI, OFFSET TIMEFINISHED
					MOV CH, [SI]
					INC SI
					MOV CL, [SI]
					INC SI
					MOV DH, [SI]
					CALL OUTPUTTIME
					
					MOV DH, 11
					MOV DL, 29
					CALL GOTOXY
					
					MOV DX, OFFSET MSGTIMESTARTED
					MOV AH, 9
					INT 21H
					
					MOV DL, 3AH
					MOV AH, 2
					INT 21H				
					
					MOV DL, 20H
					MOV AH, 2
					INT 21H		
					
					MOV SI, OFFSET TIMESTARTED
					MOV CH, [SI]
					INC SI
					MOV CL, [SI]
					INC SI
					MOV DH, [SI]
					CALL OUTPUTTIME
					
					MOV DH, 13
					MOV DL, 29
					CALL GOTOXY
					MOV AH, 9
					MOV DX, OFFSET MSGTOTALTIME
					INT 21H
					
					MOV DL, 3AH
					MOV AH, 2
					INT 21H
					
					MOV DL, 20H
					INT 21H
					MOV DL, 20H
					INT 21H
					MOV DL, 20H
					INT 21H
					
					
					MOV SI, OFFSET TIMETOTAL
					MOV CH, [SI]
					INC SI
					MOV CL, [SI]
					INC SI
					MOV DH, [SI]
					CALL OUTPUTTIME
					
					
					RET
DRAWTIMES			ENDP

COMPUTETOTALTIME		PROC
					; WHAT THIS DOES IS THAT IT GETS THE VALUE OF TIME STARTED AND SUBTRACTS IT FROM TIME FINISHED RESULTING IN THE TOTAL ELAPSED TIME THE PLAYER SPENT IN SOLVING THE PUZZLE. 
					MOV SI, OFFSET TIMESTARTED
					MOV DI, OFFSET TIMEFINISHED
					MOV AH, [SI]
					MOV AL, [DI]
					
										
					SUB AL, AH
					
					MOV CH, AL
					
					INC SI
					INC DI
					MOV AH, [SI]
					MOV AL, [DI]
					
					SUB AL, AH
					
					MOV CL, AL
					
					INC SI
					INC DI
					MOV AH, [SI]
					MOV AL, [DI]
					
					CMP AL, AH			; IF AH IS GREATER THAN AL
					JG SKIPFIX1
					ADD AL, 60
	SKIPFIX1:
					
					SUB AL, AH
					
					MOV DH, AL
					
					MOV DI, OFFSET TIMETOTAL
					MOV [DI], CH
					INC DI
					MOV [DI], CL
					INC DI
					MOV [DI], DH
					
					RET
COMPUTETOTALTIME		ENDP			

CHECKIFCOMPLETE			PROC
					; CHECKS IF ALL OF THE ELEMENTS HAVE BEEN FILLED IN
					; THE FOLLOWING ARE TWO LOOPS CHECKING ALL THE BOXES IN THE PLAY AREA
					; IF AN EMPTY BOX IS ENCOUNTERED, PLAY CONTINUES
					; IF NO EMPTY BOXES ARE ENCOUNTERED, IT THEN CHECKS IF ALL THE ANSWERS ARE CORRECT, IF IT IS NOT, PLAY CONTINUES. IF ALL ARE CORRECT, STAGECOMPLETE PAGE IS CALLED
					
					PUSH BX
					PUSH CX
					PUSH DX
					
					XOR BX, BX
					XOR DX, DX
					
					MOV DL, 9
					MOV BX, 866
	COLCHECK:					
					MOV CX, 9
	ROWCHECK:				
					;MOV AH, 5CH
					;INC BX
					;MOV ES:[BX], AH
					;DEC BX
					MOV AX, ES:[BX]
					CMP AL, 255
					JE THEREISBLANK
					ADD BX, 4
					LOOP ROWCHECK
					ADD BX, 284
					DEC DL
					CMP DL, 0
					JE THEREISNOBLANK
					JMP COLCHECK				
	THEREISBLANK:
					JMP ENDCOMPLETIONCHECKER
	THEREISNOBLANK:
					CALL INCORRECTCHECKER
					MOV AL, INCORRECTFLAG
					CMP AL, 1
					JE DONTGOTOCOMPLETIONSCREEN
					CALL COMPLETIONPAGE
	DONTGOTOCOMPLETIONSCREEN:
					; CALL ENDPROGRAM			; TEMP FOR DEBUG ; PLACE CALL STAGECOMPLETE PAGE
					JMP ENDCOMPLETIONCHECKER
	ENDCOMPLETIONCHECKER:
					
					POP DX
					POP CX
					POP BX
					RET
CHECKIFCOMPLETE			ENDP

MOUSEFUNCTIONHS			PROC
					MOV AX, 0003				; GET MOUSE COORDINATES AND BUTTON PRESSES
					INT 33H
										
					CMP BX, 2				; IF RMB IS CLICKED, THEN EXIT (TEMPORARY)
					JNE ENDRMBCHECKHS
					CALL ENDPROGRAM
	ENDRMBCHECKHS:
					; CHECKS IF LMB IS PRESSED
					CMP BX, 1
					JNE ENDMOUSEFUNCTIONHS
					
					MOV DI, OFFSET CURSORPOSITION		; SAVE MOUSE COORDINATES TO CURSORPOSITION
					MOV [DI], CX				; SAVE X COORDINATE
					INC DI
					INC DI
					MOV [DI], DX		

					; CHECKS IF NEW PUZZLE BUTTON IS PRESSED
					MOV SI, OFFSET POSNEWPUZZLE
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK4
					MOV DI, OFFSET CHOICEDISPLAYALLVALUES
					MOV AH, 1
					MOV [DI], AH					
					CALL DELAY
					CALL PUZZLESELECTIONSCREEN
					JMP ENDCLICKCHECK
	NEXTCHECK4:					
					
					; CHECKS IF MAIN MENU BUTTON IS PRESSED
					MOV SI, OFFSET POSMAINMENU
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE ENDCLICKCHECK4
					CALL MAIN
					JMP ENDCLICKCHECK4
					
	ENDCLICKCHECK4:
					
	ENDMOUSEFUNCTIONHS:
					MOV CX, 0000H				; RESET POSITION OF MOUSE TO 0, 0
					MOV DX, 0000H				; IF THIS IS NOT SET, THE MOUSE WILL CLICK ON THE SPACE FOR SEVERAL TIMES RUINING THE FLUIDITY OF THE PROGRAM
					MOV AX, 0004H
					INT 33H
	
					MOV SI, OFFSET CURSORPOSITION		; SETS CURSOR POSITION
					MOV BX, [SI]				; SAVE X POSITION
					INC SI
					INC SI
					MOV DX, [SI]				; SAVE Y POSITION
					
					RET
MOUSEFUNCTIONHS			ENDP


MOUSEFUNCTIONMAINMENU 		PROC
					MOV AX, 0003				; GET MOUSE COORDINATES AND BUTTON PRESSES
					INT 33H
										
					CMP BX, 2				; IF RMB IS CLICKED, THEN EXIT (TEMPORARY)
					JNE ENDRMBCHECK3
					CALL ENDPROGRAM
	ENDRMBCHECK3:
					; CHECKS IF LMB IS PRESSED
					CMP BX, 1
					JNE ENDMOUSEFUNCTIONMAINMENU
					
					MOV DI, OFFSET CURSORPOSITION		; SAVE MOUSE COORDINATES TO CURSORPOSITION
					MOV [DI], CX				; SAVE X COORDINATE
					INC DI
					INC DI
					MOV [DI], DX					
	
					; CHECKS IF EXIT BUTTON IS PRESSED
					MOV SI, OFFSET POSEEXIT
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK21
					CALL ENDPROGRAM				
					JMP ENDCLICKCHECK3
	NEXTCHECK21:
					; CHECKS IF NORMAL SUDOKU BUTTON IS PRESSED
					MOV SI, OFFSET POSENORMAL
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK22
					MOV GAMEMODE, 1
					CALL PUZZLESELECTIONSCREEN		
					JMP ENDCLICKCHECK3
	NEXTCHECK22:
					; CHECKS IF WORDOKU BUTTON IS PRESSED
					MOV SI, OFFSET POSEWORDOKU
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK23
					MOV GAMEMODE, 2
					CALL PUZZLESELECTIONSCREEN		
					JMP ENDCLICKCHECK3
	NEXTCHECK23:
					; CHECKS IF HALL OF FAME BUTTON IS PRESSED
					MOV SI, OFFSET POSEHALLOFFAME
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK24
					CALL ENDPROGRAM
					JMP ENDCLICKCHECK3
	NEXTCHECK24:
					; CHECKS IF MERGEDOKU BUTTON IS PRESSED
					MOV SI, OFFSET POSEMERGEDOKU
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK25
					CALL ENDPROGRAM
					JMP ENDCLICKCHECK3
	NEXTCHECK25:
					; CHECKS IF QUIZDOKU BUTTON IS PRESSED
					MOV SI, OFFSET POSEQUIZDOKU
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK26
					CALL ENDPROGRAM
					JMP ENDCLICKCHECK3
	NEXTCHECK26:
	
	ENDCLICKCHECK3:
					
	ENDMOUSEFUNCTIONMAINMENU:
					MOV CX, 0000H				; RESET POSITION OF MOUSE TO 0, 0
					MOV DX, 0000H				; IF THIS IS NOT SET, THE MOUSE WILL CLICK ON THE SPACE FOR SEVERAL TIMES RUINING THE FLUIDITY OF THE PROGRAM
					MOV AX, 0004H
					INT 33H
	
					MOV SI, OFFSET CURSORPOSITION		; SETS CURSOR POSITION
					MOV BX, [SI]				; SAVE X POSITION
					INC SI
					INC SI
					MOV DX, [SI]				; SAVE Y POSITION
					
					RET
MOUSEFUNCTIONMAINMENU		ENDP


MOUSEFUNCTIONPUZZLESELECTION 	PROC
					MOV AX, 0003				; GET MOUSE COORDINATES AND BUTTON PRESSES
					INT 33H
										
					CMP BX, 2				; IF RMB IS CLICKED, THEN EXIT (TEMPORARY)
					JNE ENDRMBCHECK2
					CALL COMPLETIONPAGE
					CALL ENDPROGRAM
	ENDRMBCHECK2:
					; CHECKS IF LMB IS PRESSED
					CMP BX, 1
					JNE ENDMOUSEFUNCTIONPUZZLESELECTIONBUFFER
					
					MOV DI, OFFSET CURSORPOSITION		; SAVE MOUSE COORDINATES TO CURSORPOSITION
					MOV [DI], CX				; SAVE X COORDINATE
					INC DI
					INC DI
					MOV [DI], DX					
	
					; CHECKS IF EASY BUTTON IS PRESSED
					MOV SI, OFFSET POSEASY
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK11
					
					MOV DI, OFFSET FILENUMBER
					MOV AL, 30H
					MOV [DI], AL
					INC DI
					MOV AL, 31H
					MOV [DI], AL
					
					CALL CHANGEFILENAME										
					CALL OPENANSWERSHEET
					CALL DRAWALLPUZZLESELECTION
					
					JMP ENDCLICKCHECK2
	NEXTCHECK11:
					; CHECKS IF MEDIUM BUTTON IS PRESSED
					MOV SI, OFFSET POSMEDIUM
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK12
					
					MOV DI, OFFSET FILENUMBER
					MOV AL, 33H
					MOV [DI], AL
					INC DI
					MOV [DI], AL
					
					CALL CHANGEFILENAME										
					CALL OPENANSWERSHEET
					CALL DRAWALLPUZZLESELECTION
					
					JMP ENDCLICKCHECK2
	NEXTCHECK12:
					; CHECKS IF HARD BUTTON IS PRESSED
					MOV SI, OFFSET POSHARD
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK13
					
					MOV DI, OFFSET FILENUMBER
					MOV AL, 36H
					MOV [DI], AL
					INC DI
					MOV [DI], AL
					
					CALL CHANGEFILENAME										
					CALL OPENANSWERSHEET
					CALL DRAWALLPUZZLESELECTION
					
					JMP ENDCLICKCHECK2
	ENDMOUSEFUNCTIONPUZZLESELECTIONBUFFER:
					JMP ENDMOUSEFUNCTIONPUZZLESELECTION
	NEXTCHECK13:	
					; CHECKS IF NEXT BUTTON IS PRESSED
					MOV SI, OFFSET POSNEXTPUZZLE
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK14
					
					; THE FOLLOWING CODE INCREMENTS THE FILENUMBER
					MOV SI, OFFSET FILENUMBER
					MOV AH, [SI]
					INC SI
					MOV AL, [SI]
										
					CMP AL, 39H					; IF 1ST DIGIT IS 9
					JE INCSECONDDIGIT
					INC AL
					JMP ENDOFINCREASING
	INCSECONDDIGIT:
					CMP AH, 39H					; IF 2ND DIGIT IS 9
					JE BACKTOZERO
					MOV AL, 30H
					INC AH
					JMP ENDOFINCREASING
	BACKTOZERO:				
					MOV AH, 30H
					MOV AL, 31H
	ENDOFINCREASING:	
					MOV DI, OFFSET FILENUMBER
					MOV [DI], AH
					INC DI
					MOV [DI], AL
					
					CALL CHANGEFILENAME										
					CALL OPENANSWERSHEET
					CALL DRAWALLPUZZLESELECTION
					
					JMP ENDCLICKCHECK2
	NEXTCHECK14:	
					; CHECKS IF PREV BUTTON IS PRESSED
					MOV SI, OFFSET POSPREVPUZZLE
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK15
					
					; THE FOLLOWING CODE DECREMENTS THE FILENUMBER
					MOV SI, OFFSET FILENUMBER
					MOV AH, [SI]
					INC SI
					MOV AL, [SI]
								
					CMP AH, 30H					; IF 2ND DIGIT IS 0
					JNE SKIPTHIS
					CMP AL, 31H					
					JE BACKTO99
	SKIPTHIS:
					CMP AL, 30H					; IF 1ST DIGIT IS 0
					JE DECSECONDDIGIT
					DEC AL
					JMP ENDOFDECREASING
	DECSECONDDIGIT:					
					MOV AL, 39H
					DEC AH
					JMP ENDOFDECREASING
	BACKTO99:			
					
					MOV AH, 39H
					MOV AL, 39H
					JMP ENDOFDECREASING
	ENDOFDECREASING:	
					MOV DI, OFFSET FILENUMBER
					MOV [DI], AH
					INC DI
					MOV [DI], AL
					
					CALL CHANGEFILENAME										
					CALL OPENANSWERSHEET
					
					CALL DRAWALLPUZZLESELECTION
					
					JMP ENDCLICKCHECK2
	NEXTCHECK15:	
					; CHECKS IF USE BUTTON IS PRESSED
					MOV SI, OFFSET POSUSEPUZZLE
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK16
					CALL MAINGAME
					JMP ENDCLICKCHECK2
					
					
	NEXTCHECK16:	
					; CHECKS IF NEW PUZZLE BUTTON IS PRESSED
					MOV SI, OFFSET POSHIGHSCORES
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK17	
					CALL DELAY
					CALL HIGHSCORESPAGE
					JMP ENDCLICKCHECK2
	NEXTCHECK17:
	
					; CHECKS IF MAIN MENU BUTTON IS PRESSED
					MOV SI, OFFSET POSMAINMENU
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE ENDCLICKCHECK2
					CALL MAIN
					JMP ENDCLICKCHECK2
	
	ENDCLICKCHECK2:
	ENDMOUSEFUNCTIONPUZZLESELECTION:
					MOV CX, 0000H				; RESET POSITION OF MOUSE TO 0, 0
					MOV DX, 0000H				; IF THIS IS NOT SET, THE MOUSE WILL CLICK ON THE SPACE FOR SEVERAL TIMES RUINING THE FLUIDITY OF THE PROGRAM
					MOV AX, 0004H
					INT 33H
	
					MOV SI, OFFSET CURSORPOSITION		; SETS CURSOR POSITION
					MOV BX, [SI]				; SAVE X POSITION
					INC SI
					INC SI
					MOV DX, [SI]				; SAVE Y POSITION
					
					RET
MOUSEFUNCTIONPUZZLESELECTION	ENDP


MOUSEFUNCTIONGAME 		PROC
					
					;MOV DH, 1				; SETS WHERE THE COORDINATES WILL BE DISPLAYED
					;MOV DL, 39
					;CALL GOTOXY
					
					MOV AX, 0003				; GET MOUSE COORDINATES AND BUTTON PRESSES
					INT 33H
					
					PUSH DX
					MOV DX, CX				; DISPLAYS X COORDINATE OF MOUSE
					MOV AH, 2
					;INT 21H
					
					MOV DX, 255				; DISPLAYS A BLANK SQUARE
					MOV AH, 2
					;INT 21H
					
					POP DX					; DISPLAYS Y COORDINATE OF MOUSE
					MOV AH, 2
					;INT 21H
					
					CMP BX, 2				; IF RMB IS CLICKED, THEN EXIT (TEMPORARY)
					JNE ENDRMBCHECK
					CALL COMPLETIONPAGE
					; CALL ENDPROGRAM
	ENDRMBCHECK:
					; CHECKS IF LMB IS PRESSED
					CMP BX, 1
					JNE ENDMOUSEFUNCTIONGAMEBUFFER	
					
					MOV DI, OFFSET CURSORPOSITION		; SAVE MOUSE COORDINATES TO CURSORPOSITION
					MOV [DI], CX				; SAVE X COORDINATE
					INC DI
					INC DI
					MOV [DI], DX					
	
					; CHECKS IF PLAY AREA IS CLICKED
					MOV SI, OFFSET POSPLAYAREA
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE CHECKTHEBUTTONS					
					CALL CHECKCLICKEDELEMENT
					
					;CALL CLRSCR
					;MOV AH, 4CH
					;INT 21H
	CHECKTHEBUTTONS:
					; CHECKS IF HELP ME BUTTON IS PRESSED
					MOV SI, OFFSET POSHELPME
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK0
					MOV SI, OFFSET SUDMSG6
					CALL SUDOKUBOYSPEAK
					MOV CANHIGHLIGHT, 1
					CALL INCORRECTCHECKER
					JMP ENDCLICKCHECK
	NEXTCHECK0:
					; CHECKS IF GIVE UP BUTTON IS PRESSED
					MOV SI, OFFSET POSGIVEUP
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK1
					
					MOV DI, OFFSET CHOICEDISPLAYALLVALUES
					MOV AH, 2
					MOV [DI], AH
					CALL CLRSCR
					CALL DRAWALLGAME
					MOV SI, OFFSET SUDMSG7
					CALL SUDOKUBOYSPEAK
					JMP ENDCLICKCHECK
	ENDMOUSEFUNCTIONGAMEBUFFER:
					JMP ENDMOUSEFUNCTIONGAME
	NEXTCHECK1:
					; CHECKS IF NEW PUZZLE BUTTON IS PRESSED
					MOV SI, OFFSET POSNEWPUZZLE
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK2
					MOV DI, OFFSET CHOICEDISPLAYALLVALUES
					MOV AH, 1
					MOV [DI], AH
					CALL CLRSCR
					CALL PUZZLESELECTIONSCREEN
					JMP ENDCLICKCHECK
	NEXTCHECK2:
					; CHECKS IF MAIN MENU BUTTON IS PRESSED
					MOV SI, OFFSET POSMAINMENU
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE NEXTCHECK3
					CALL MAIN
					JMP ENDCLICKCHECK
	NEXTCHECK3:
					MOV SI, OFFSET POSRESET
					CALL CHECKIFBUTTONPRESSED
					CMP BL, 0
					JE ENDCLICKCHECK
					MOV DI, OFFSET CHOICEDISPLAYALLVALUES
					MOV AH, 1
					MOV [DI], AH
					
					CALL CLRSCR
					CALL DRAWALLGAME
					MOV SI, OFFSET SUDMSG8
					CALL SUDOKUBOYSPEAK
					JMP ENDCLICKCHECK
	ENDCLICKCHECK:
					MOV CX, 0000H				; RESET POSITION OF MOUSE TO 0, 0
					MOV DX, 0000H				; IF THIS IS NOT SET, THE MOUSE WILL CLICK ON THE SPACE FOR SEVERAL TIMES RUINING THE FLUIDITY OF THE PROGRAM
					MOV AX, 0004H
					INT 33H
	ENDMOUSEFUNCTIONGAME:
					MOV SI, OFFSET CURSORPOSITION		; SETS CURSOR POSITION
					MOV BX, [SI]				; SAVE X POSITION
					INC SI
					INC SI
					MOV DX, [SI]				; SAVE Y POSITION
					
					RET
MOUSEFUNCTIONGAME		ENDP

CHECKCLICKEDELEMENT		PROC
					PUSH DX
					PUSH CX
					
					MOV AX, DX				; DIVIDE ROW BY 8 MICKEYS
					XOR DX, DX
					MOV BL, 8
					DIV BL
					
					PUSH AX					; SAVE ROW
					MOV DX, AX
					MOV AH, 2
					ADD DX, 30H
					;INT 21H
					
					MOV AX, CX				; DIVIDE COL BY 8 MICKEYS
					XOR DX, DX
					MOV BL, 8
					DIV BL
					
					PUSH AX					; SAVE COL
					MOV DX, AX
					MOV AH, 2
					ADD DX, 30H
					;INT 21H
					
					POP CX					; LOAD COL
					POP DX					; LOAD ROW
					
					XOR AX, AX
					MOV AX, 5
					SUB DX, AX				; SUBTRACT TO GET THE ROW OF PLAYAREA
					PUSH DX					; SAVE ROW MODIFIER
					
					MOV AH, 2
					ADD DX, 30H
					;INT 21H
					
					MOV AX, 33
					SUB CX, AX				; SUBTRACT TO GET THE COL OF PLAYAREA
					PUSH CX					; PUSH COL MODIFIER
					
					MOV DX, CX
					MOV AH, 2
					ADD DX, 30H
					;INT 21H
					
					POP CX					; LOAD COL MODIFIER
					POP DX					; LOAD ROW MODIFIER
					
					PUSH DX					; SAVE TEMPORARILY
					SHR DX, 1				; THIS CHECKS IF MODIFIER IS ODD OR EVEN
					JC DONTEDITDXBUF			; IF ODD DONT ALLOW EDITING
					POP DX					; LOAD TEMPORARY
					
					PUSH CX					; SAVE TEMPORARILY
					SHR CX, 1
					JC DONTEDITCXBUF
					POP CX					; LOAD TEMPORARY
					
					MOV AX, DX
					XOR DX, DX
					MOV BX, 160
					MUL BX
					PUSH AX					; SAVE TEMPORARILY
					
					MOV AX, CX
					XOR DX, DX
					MOV BL, 2
					MUL BL
					
					MOV BX, 866				; MOVE THE POINTER
					ADD BX, AX
					POP AX					; LOAD THE TEMPORARY SAVED VALUE
					ADD BX, AX
					;MOV AL, 41H	
					;MOV AH, 0F0H
					;MOV ES:[BX], AX
					
					MOV SI, OFFSET SUDMSG2
					CALL SUDOKUBOYSPEAK
					
					MOV AX, ES:[BX]				; THIS NEGATES THE COLOR OF BACKGROUND AND FOREGROUND
					NEG AH					
					MOV ES:[BX], AX				
						
					; THIS IS WHERE INPUT IS ACCEPTED FOR THE PLAYAREA
	WAITFORINPUT:
					MOV AH, 7
					INT 21H
					
					CMP AL, 0DH 				; IF INPUT IS ENTER				
					JE ENDWAITFORINPUT
					CMP AL, 08H
					JNE NOTBACKSPACE
					MOV SI, OFFSET SUDMSG4
					CALL SUDOKUBOYSPEAK
					
					MOV AH, 0FH
					MOV AL, 255
					MOV ES:[BX], AX
					JMP ENDCHECKCLICKEDELEMENT
	DONTEDITCXBUF:
					JMP DONTEDITCX
	DONTEDITDXBUF:
					JMP DONTEDITDX
	NOTBACKSPACE:
					MOV SI, OFFSET SUDMSG3
					CALL SUDOKUBOYSPEAK
					
					MOV DL, GAMEMODE
					CMP DL, 2
					JE WORDOKUINPUT				; IF WORDOKU MODE
					
					CMP AL, 31H				; IF LESS THAN CHARACTER ONE				
					JL WAITFORINPUT
					CMP AL, 39H				; IF GREATER THAN CHARACTER NINE
					JG WAITFORINPUT
					JMP PLACEINPUT
	WORDOKUINPUT:
					CMP AL, 41H
					JL WAITFORINPUT
					CMP AL, 49H
					JG WAITFORINPUT
					JMP PLACEINPUT
	PLACEINPUT:
					MOV AH, 0F5H
					MOV ES:[BX], AX
										
					JMP WAITFORINPUT
	ENDWAITFORINPUT:		
					MOV SI, OFFSET SUDMSG5
					CALL SUDOKUBOYSPEAK
	
					MOV AX, ES:[BX]				; THIS NEGATES THE COLOR OF BACKGROUND AND FOREGROUND
					NEG AH
					MOV ES:[BX], AX					
					
					CALL CHECKIFCOMPLETE			; THIS CHECKS IF THE PUZZLE PUZZLE IS COMPLETE
					
					JMP ENDCHECKCLICKEDELEMENT
	DONTEDITDX:
					POP DX							
					MOV SI, OFFSET SUDMSG9
					CALL SUDOKUBOYSPEAK
					JMP ENDCHECKCLICKEDELEMENT
	DONTEDITCX:
					POP CX
					MOV SI, OFFSET SUDMSG9
					CALL SUDOKUBOYSPEAK
					JMP ENDCHECKCLICKEDELEMENT
	ENDCHECKCLICKEDELEMENT:
					POP CX
					POP DX
					
					RET
CHECKCLICKEDELEMENT		ENDP

CHECKIFBUTTONPRESSED		PROC
					; RETURNS BL = 1 ; IF BUTTON BEING CHECKED IS PRESSED
					; RETURNS BL = 0 ; IF BUTTON BEING CHECKED WAS NOT PRESSED
					CMP DX, [SI]				; THIS CHECKS IF THE MOUSE IS POSITION WITHIN THE TOP BORDER OF THE BUTTON
					JL ENDEXITCOMPARE
					INC SI
					INC SI
					CMP DX, [SI]				; THIS CHECKS IF THE MOUSE IS POSITION WITHIN THE BOTTOM BORDER OF THE BUTTON
					JG ENDEXITCOMPARE
					INC SI
					INC SI
					CMP CX, [SI]				; THIS CHECKS IF THE MOUSE IS POSITION WITHIN THE LEFT BORDER OF THE BUTTON
					JL ENDEXITCOMPARE
					INC SI
					INC SI
					CMP CX, [SI]				; THIS CHECKS IF THE MOUSE IS POSITION WITHIN THE RIGHT BORDER OF THE BUTTON
					JG ENDEXITCOMPARE
					MOV BL, 1
					JMP ENDCHECKIFBUTTONPRESSED
	ENDEXITCOMPARE:
					MOV BL, 0
					JMP ENDCHECKIFBUTTONPRESSED
	ENDCHECKIFBUTTONPRESSED:
					RET
CHECKIFBUTTONPRESSED		ENDP

INCORRECTCHECKER		PROC
					;MOV BX, 866
					;MOV AL, 41H				; TEST ONLY, PRINTS USING VIDEO MEMORY MAP
					;MOV AH, 0F0H
					;MOV ES:[BX], AX
					
					MOV INCORRECTFLAG, 0
					MOV BX, 862
					PUSH BX
					MOV SI, OFFSET ROW1
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW2
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW3
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW4
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW5
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW6
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW7
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW8
					CALL CHECKROW
					POP BX
					ADD BX, 320
					PUSH BX
					MOV SI, OFFSET ROW9
					CALL CHECKROW
					POP BX
					
					MOV CANHIGHLIGHT, 0
					
					RET
INCORRECTCHECKER		ENDP	

CHECKROW			PROC
	CHECKNEXTELEMENT:
					ADD BX, 4					
					MOV DL, "$"
					CMP DL, [SI]
					JE ENDCHECKROW
					MOV AX, ES:[BX]
					
					CMP AL, 255				; CHECKS IF BLANK SPACE
					JE CHECKNEXTELEMENT1
					MOV DL, GAMEMODE			; CHECKS WHAT GAME MODE WE'RE ON
					CMP DL, 2						
					JNE SUB30
					SUB AL, 40H
					JMP WAHERE
	SUB30:		
					SUB AL, 30H				; IF THERE IS A VALUE, CONVERT TO DECIMAL
	WAHERE:
					CMP AL, [SI]
					JE CHECKNEXTELEMENT1			; IF THE INPUTTED VALUE IS CORRECT CHECK NEXT ELEMENT
					MOV CL, CANHIGHLIGHT
					CMP CL, 0						
					JE DONTHIGHLIGHT			; IF CANNOT NIGHLIGHT JUMP
					MOV AH, 0CFH				; HIGHLIGHT THE ELEMENT IN RED
	DONTHIGHLIGHT:				
					INC BX
					MOV ES:[BX], AH
					DEC BX
					ADD SI, 2
					MOV INCORRECTFLAG, 1			; SETS INCORRECT FLAG
					JMP CHECKNEXTELEMENT
	CHECKNEXTELEMENT1:
					ADD SI, 2
					JMP CHECKNEXTELEMENT
	ENDCHECKROW:
					RET
CHECKROW			ENDP

DRAWALLMAINMENU			PROC
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 03FH
					MOV CX, 2000
					INT 10H
					
					MOV DH, 0
					MOV DL, 24
					MOV CX, 25
	LOOPDRAWBGMAINMENU:
					PUSH CX
					CALL GOTOXY
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 00FH
					MOV CX, 56
					INT 10H
					POP CX
					INC DH
					LOOP LOOPDRAWBGMAINMENU

					MOV DH, 20
					MOV DL, 8
					CALL GOTOXY
					CALL DRAWSUDOKUBOY
					
					MOV DH, 2
					MOV DL, 4
					CALL GOTOXY
					CALL DRAWSUDOKUBOYBUBBLE
					
					MOV DH, 2
					MOV DL, 5
					CALL GOTOXY
					MOV SI, OFFSET TXTSUDOKUBOYSAYS
					MOV BL, 3FH
					CALL DRAWTEXT
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;S
					MOV DH, 4				; SET ROW
					MOV DL, 32				; SET COLUMN
					MOV SI, OFFSET LETTERS
					MOV BL, 003H
					CALL DRAWTEXT
					
					MOV DH, 5				; SET ROW
					MOV DL, 32				; SET COLUMN
					MOV SI, OFFSET LETTERS1
					CALL DRAWTEXT
					
					MOV DH, 6				; SET ROW
					MOV DL, 32				; SET COLUMN
					MOV SI, OFFSET LETTERS2
					CALL DRAWTEXT
					
					MOV DH, 7				; SET ROW
					MOV DL, 32				; SET COLUMN
					MOV SI, OFFSET LETTERS3
					MOV BL, 00FH
					CALL DRAWTEXT
					
					MOV DH, 8				; SET ROW
					MOV DL, 32				; SET COLUMN
					MOV SI, OFFSET LETTERS4
					CALL DRAWTEXT
					
					MOV DH, 9				; SET ROW
					MOV DL, 32				; SET COLUMN
					MOV SI, OFFSET LETTERS5
					CALL DRAWTEXT
					
					MOV DH, 10				; SET ROW
					MOV DL, 32				; SET COLUMN
					MOV SI, OFFSET LETTERS6
					CALL DRAWTEXT
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;U
					
					MOV DH, 4				; SET ROW
					MOV DL, 39				; SET COLUMN
					MOV SI, OFFSET LETTERU
					MOV BL, 003H
					CALL DRAWTEXT
						
					MOV DH, 5				; SET ROW
					MOV DL, 39				; SET COLUMN
					MOV SI, OFFSET LETTERU
					CALL DRAWTEXT
					
					MOV DH, 6				; SET ROW
					MOV DL, 39				; SET COLUMN
					MOV SI, OFFSET LETTERU
					CALL DRAWTEXT
					
					
					MOV DH, 7				; SET ROW
					MOV DL, 39				; SET COLUMN
					MOV SI, OFFSET LETTERU
					MOV BL, 00FH
					CALL DRAWTEXT
					
					MOV DH, 8				; SET ROW
					MOV DL, 39				; SET COLUMN
					MOV SI, OFFSET LETTERU
					CALL DRAWTEXT
					
					MOV DH, 9				; SET ROW
					MOV DL, 39				; SET COLUMN
					MOV SI, OFFSET LETTERU
					CALL DRAWTEXT
					
					MOV DH, 10				; SET ROW
					MOV DL, 39					; SET COLUMN
					MOV SI, OFFSET LETTERU1
					CALL DRAWTEXT
					
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;D
					
					MOV DH, 4				; SET ROW
					MOV DL, 46				; SET COLUMN
					MOV SI, OFFSET LETTERD
					MOV BL, 003H
					CALL DRAWTEXT
						
					MOV DH, 5				; SET ROW
					MOV DL, 46				; SET COLUMN
					MOV SI, OFFSET LETTERD1
					CALL DRAWTEXT
					
					MOV DH, 6				; SET ROW
					MOV DL, 46				; SET COLUMN
					MOV SI, OFFSET LETTERD1
					CALL DRAWTEXT
					
					
					MOV DH, 7				; SET ROW
					MOV DL, 46				; SET COLUMN
					MOV SI, OFFSET LETTERD1
					MOV BL, 00FH
					CALL DRAWTEXT
					
					MOV DH, 8				; SET ROW
					MOV DL, 46				; SET COLUMN
					MOV SI, OFFSET LETTERD1
					CALL DRAWTEXT
					
					MOV DH, 9				; SET ROW
					MOV DL, 46				; SET COLUMN
					MOV SI, OFFSET LETTERD1
					CALL DRAWTEXT
					
					MOV DH, 10				; SET ROW
					MOV DL, 46				; SET COLUMN
					MOV SI, OFFSET LETTERD
					CALL DRAWTEXT
					
						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0
					
					MOV DH, 4				; SET ROW
					MOV DL, 53				; SET COLUMN
					MOV SI, OFFSET LETTERO
					MOV BL, 003H
					CALL DRAWTEXT
						
					MOV DH, 5				; SET ROW
					MOV DL, 53				; SET COLUMN
					MOV SI, OFFSET LETTERO1
					CALL DRAWTEXT
					
					MOV DH, 6				; SET ROW
					MOV DL, 53				; SET COLUMN
					MOV SI, OFFSET LETTERO1
					MOV BL, 003H
					CALL DRAWTEXT
					
					
					MOV DH, 7				; SET ROW
					MOV DL, 53				; SET COLUMN
					MOV SI, OFFSET LETTERO1
					MOV BL, 00FH
					CALL DRAWTEXT
					
					MOV DH, 8				; SET ROW
					MOV DL, 53				; SET COLUMN
					MOV SI, OFFSET LETTERO1
					CALL DRAWTEXT
					
					MOV DH, 9				; SET ROW
					MOV DL, 53				; SET COLUMN
					MOV SI, OFFSET LETTERO1
					CALL DRAWTEXT
					
					MOV DH, 10				; SET ROW
					MOV DL, 53				; SET COLUMN
					MOV SI, OFFSET LETTERO
					CALL DRAWTEXT
					
							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;K
					
					MOV DH, 4				; SET ROW
					MOV DL, 60				; SET COLUMN
					MOV SI, OFFSET LETTERK
					MOV BL, 003H
					CALL DRAWTEXT
						
					MOV DH, 5				; SET ROW
					MOV DL, 60				; SET COLUMN
					MOV SI, OFFSET LETTERK1
					CALL DRAWTEXT
					
					MOV DH, 6				; SET ROW
					MOV DL, 60				; SET COLUMN
					MOV SI, OFFSET LETTERK2
					CALL DRAWTEXT
					
					
					MOV DH, 7				; SET ROW
					MOV DL, 60				; SET COLUMN
					MOV SI, OFFSET LETTERK3
					MOV BL, 00FH
					CALL DRAWTEXT
					
					MOV DH, 8				; SET ROW
					MOV DL, 60				; SET COLUMN
					MOV SI, OFFSET LETTERK4
					CALL DRAWTEXT
					
					MOV DH, 9				; SET ROW
					MOV DL, 60				; SET COLUMN
					MOV SI, OFFSET LETTERK5
					CALL DRAWTEXT
					
					MOV DH, 10				; SET ROW
					MOV DL, 60				; SET COLUMN = 7
					MOV SI, OFFSET LETTERK6
					CALL DRAWTEXT
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;U
					
					MOV DH, 4				; SET ROW
					MOV DL, 67				; SET COLUMN
					MOV SI, OFFSET LETTERU
					MOV BL, 003H
					CALL DRAWTEXT
						
					MOV DH, 5				; SET ROW
					MOV DL, 67				; SET COLUMN
					MOV SI, OFFSET LETTERU
					MOV BL, 003H
					CALL DRAWTEXT
					
					MOV DH, 6				; SET ROW
					MOV DL, 67				; SET COLUMN
					MOV SI, OFFSET LETTERU
					MOV BL, 003H
					CALL DRAWTEXT
					
					
					MOV DH, 7				; SET ROW
					MOV DL, 67				; SET COLUMN
					MOV SI, OFFSET LETTERU
					MOV BL, 00FH
					CALL DRAWTEXT
					
					MOV DH, 8				; SET ROW
					MOV DL, 67				; SET COLUMN
					MOV SI, OFFSET LETTERU
					CALL DRAWTEXT
					
					MOV DH, 9				; SET ROW
					MOV DL, 67				; SET COLUMN
					MOV SI, OFFSET LETTERU
					CALL DRAWTEXT
					
					MOV DH, 10				; SET ROW
					MOV DL, 67				; SET COLUMN
					MOV SI, OFFSET LETTERU1
					CALL DRAWTEXT

					MOV DH, 7
					MOV DL, 8
					CALL GOTOXY
					MOV SI, OFFSET MSGCHOOSE
					MOV BL,03FH
					CALL DRAWTEXT
					
					MOV DH, 8
					MOV DL, 7
					CALL GOTOXY
					MOV SI, OFFSET MSGWISELY
					MOV BL, 03FH
					CALL DRAWTEXT
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;DISPLAY NORMAL MODE
					
					MOV DH, 13
					MOV DL, 43
					CALL DRAWBUTTONGRAPHIC
					INC DH					; SET ROW
					ADD DL, 2				; SET COLUMN
					MOV SI, OFFSET MSGNORMMODE
					MOV BL, 00FH
					CALL DRAWTEXT
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;DISPLAY MERGEDOKU MODE
							
					;; MOV DH, 13
					;; MOV DL, 55
					;; CALL DRAWBUTTONGRAPHIC
					;; INC DH				; SET ROW
					;; ADD DL, 4				; SET COLUMN
					;; MOV SI, OFFSET MSGMERGEDOKU
					;; MOV BL, 00FH
					;; CALL DRAWTEXT
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;DISPLAY WORDOKU MODE
				 
					MOV DH, 16
					MOV DL, 43
					CALL DRAWBUTTONGRAPHIC
					INC DH					; SET ROW
					ADD DL, 5				; SET COLUMN
					MOV SI, OFFSET MSGWORDOKU
					MOV BL, 00FH
					CALL DRAWTEXT
				 
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;DISPLAY QUIZDOKU MODE
				 		
					;; MOV DH, 16
					;; MOV DL, 55
					;; CALL DRAWBUTTONGRAPHIC
					;; INC DH				; SET ROW
					;; ADD DL, 4				; SET COLUMN
					;; MOV SI, OFFSET MSGQUIZDOKU
					;; MOV BL, 00FH
					;; CALL DRAWTEXT
					
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;DISPLAY HALLOFFAME PAGE
				
						
					;; MOV DH, 19
					;; MOV DL, 33
					;; CALL DRAWBUTTONGRAPHIC
					;; INC DH				; SET ROW
					;; ADD DL, 3				; SET COLUMN
					;; MOV SI, OFFSET MSGHALLOFFAME
					;; MOV BL, 00FH
					;; CALL DRAWTEXT
				 
					
					
					;;;;;;;;;;;;;;;;;;;;;;;;;;;DISPLAY EXIT MODE
				    
					
					MOV DH, 19
					MOV DL, 43
					CALL DRAWBUTTONGRAPHIC
					INC DH					; SET ROW
					ADD DL, 4				; SET COLUMN
					MOV SI, OFFSET MSGEXIT
					MOV BL, 00FH
					CALL DRAWTEXT
					
					XOR DX, DX
					CALL GOTOXY
					
					RET
DRAWALLMAINMENU			ENDP

DRAWALLPUZZLESELECTION		PROC
					CALL DISPLAYPLAYAREA
					CALL DISPLAYVALUES
					CALL DRAWBUTTONSPUZZLESELECTION	
					CALL DRAWCURRENTPUZZLENAME
					CALL DRAWPUZZLELIST
					
					XOR DX, DX
					CALL GOTOXY
					RET
DRAWALLPUZZLESELECTION		ENDP

DRAWPUZZLELIST			PROC
					MOV DH, 18
					MOV DL, 62
					CALL GOTOXY
					
					MOV SI, OFFSET MSGPUZZLELIST
					MOV BL, 3EH
					CALL DRAWTEXT
					
					MOV DH, 19
					MOV DL, 62
					CALL GOTOXY
					MOV SI, OFFSET MSGPUZZLELISTEASY
					MOV BL, 3FH
					CALL DRAWTEXT
					
					MOV DH, 20
					MOV DL, 62
					CALL GOTOXY
					MOV SI, OFFSET MSGPUZZLELISTMED
					MOV BL, 3FH
					CALL DRAWTEXT
					
					MOV DH, 21
					MOV DL, 62
					CALL GOTOXY
					MOV SI, OFFSET MSGPUZZLELISTHARD
					MOV BL, 3FH
					CALL DRAWTEXT
					
					
					RET
DRAWPUZZLELIST			ENDP

DRAWCURRENTPUZZLENAME		PROC
					MOV DH, 2
					MOV DL, 35
					CALL GOTOXY
					
					;MOV AH, 9
					MOV SI, OFFSET MSGPUZZLENUMBER
					MOV BL, 0EH
					CALL DRAWTEXT
					;INT 21H
					
					MOV DH, 2
					MOV DL, 45
					CALL GOTOXY
					
					MOV SI, OFFSET FILENUMBER
					MOV BH, 0EH
					CALL DRAWTEXT
					
					RET
DRAWCURRENTPUZZLENAME		ENDP

DRAWALLGAME			PROC
					PUSH AX
					PUSH BX
					PUSH CX
					PUSH DX
					CALL DRAWBACKGROUND
					CALL DISPLAYPLAYAREA
					CALL DISPLAYVALUES
					CALL DRAWBUTTONSGAME
					CALL DRAWSUDOKUBOYSECTION
					
					XOR DX,DX
					CALL GOTOXY
					
					POP DX
					POP CX
					POP BX
					POP AX
					
					RET
DRAWALLGAME			ENDP

SUDOKUBOYSPEAK			 PROC			
					PUSH AX
					PUSH BX
					PUSH CX
					PUSH DX
					
					; CLEARS THE BUBBLE
					MOV DH, 6
					MOV DL, 63
					CALL GOTOXY
					MOV BX, 12
	HERELOOP:
					PUSH BX
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 3FH
					MOV CX, 14
					INT 10H
					POP BX					
					
					INC DH
					CALL GOTOXY
					DEC BX
					CMP BX, 0
					JE OUTLOOP
					JMP HERELOOP
					
	OUTLOOP:				
					; OUTPUTS THE MESSAGE		
					MOV DH, 7
					MOV DL,64
					PUSH DX
	BLOOP:	
					CALL GOTOXY		
					MOV AL, [SI]
					CMP AL, "/"
					JE 	REPOSITION
	POSTNEND:			CMP AL, "$"
					JE ENDIT		
					MOV AH, 9
					MOV AL, [SI]
					MOV BH, 0
					MOV BL, 3FH
					MOV CX, 1
					INT 10H	
					
					INC SI
					INC DL
					JMP BLOOP
					
	REPOSITION:     		INC DH
					INC SI
					MOV DL,64
					CALL GOTOXY
					JMP POSTNEND
	ENDIT:						
					POP DX	
					
					XOR DX, DX
					CALL GOTOXY

					POP DX
					POP CX
					POP BX
					POP AX
					RET
SUDOKUBOYSPEAK			 ENDP

DRAWSUDOKUBOYSECTION		PROC
					MOV DH, 5
					MOV DL, 62
					CALL GOTOXY
					CALL DRAWSUDOKUBOYBUBBLE
					MOV DH, 5
					MOV DL, 63
					CALL GOTOXY
					MOV SI, OFFSET TXTSUDOKUBOYSAYS
					MOV BL, 3FH
					CALL DRAWTEXT
					MOV DH, 21
					MOV DL, 69
					CALL GOTOXY
					CALL DRAWSUDOKUBOY
					RET
DRAWSUDOKUBOYSECTION		ENDP

DRAWSUDOKUBOY			PROC
					MOV AH, 9
					MOV AL, 220
					MOV BH, 0
					MOV BL, 03CH
					MOV CX, 1
					INT 10H
					
					INC DL
					CALL GOTOXY
					
					MOV AH, 9
					MOV AL, 219
					MOV BH, 0
					MOV BL, 03CH
					MOV CX, 3
					INT 10H
					
					ADD DL, 3
					CALL GOTOXY
					
					MOV AH, 9
					MOV AL, 220
					MOV BH, 0
					MOV BL, 03CH
					MOV CX, 1
					INT 10H
					
					SUB DL, 4
					INC DH					
					CALL GOTOXY
					

					MOV CX, 1
	DRAWFACE:
					PUSH CX
					
					MOV AH, 9
					MOV AL, 222
					MOV BH, 0
					MOV BL, 03FH
					MOV CX, 1
					INT 10H
					
					INC DL
					CALL GOTOXY
					
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 0FFH
					MOV CX, 3
					INT 10H
					
					ADD DL, 3
					CALL GOTOXY
					
					MOV AH, 9
					MOV AL, 221
					MOV BH, 0
					MOV BL, 03FH
					MOV CX, 1
					INT 10H
					
					INC DH
					CALL GOTOXY
					POP CX
					LOOP DRAWFACE					
					
					SUB DL, 3
					CALL GOTOXY
					
					
					
					DEC DH				
					CALL GOTOXY
					
					MOV AH, 9
					MOV AL, 94
					MOV BH, 0
					MOV BL, 0F0H
					MOV CX, 1
					INT 10H
					
					INC DL
					CALL GOTOXY
					
					MOV AH, 9
					MOV AL, 111
					MOV BH, 0
					MOV BL, 0F0H
					MOV CX, 1
					INT 10H
					
					INC DL
					CALL GOTOXY
					
					MOV AH, 9
					MOV AL, 94
					MOV BH, 0
					MOV BL, 0F0H
					MOV CX, 1
					INT 10H
					
					RET
DRAWSUDOKUBOY			ENDP

DRAWSUDOKUBOYBUBBLE		PROC
					PUSH DX					
					MOV BL, 201
					CALL DRAWCHAR
					MOV CX, 14
	LOOPDRAWBALLOON:
					MOV BL, 205
					CALL DRAWCHAR
					LOOP LOOPDRAWBALLOON
					
					MOV BL, 187
					CALL DRAWCHAR
					
					MOV CX, 12
					INC DH
	LOOPDRAWBALLOON3:
					
					CALL GOTOXY
					MOV BL, 186
					CALL DRAWCHAR
					
					ADD DL, 15
					CALL GOTOXY
					MOV BL, 186
					CALL DRAWCHAR
					INC DH		
					SUB DL, 15
					LOOP LOOPDRAWBALLOON3
					
					
					CALL GOTOXY
					MOV BL, 200
					CALL DRAWCHAR
					MOV CX, 14
	LOOPDRAWBALLOON2:
					MOV BL, 205
					CALL DRAWCHAR
					LOOP LOOPDRAWBALLOON2
					
					MOV BL, 188
					CALL DRAWCHAR				
					
					; DRAWS BALLOON TIP
					
					ADD DL, 2
					CALL GOTOXY
					MOV BL, 187
					CALL DRAWCHAR
					MOV CX, 2
	LOOPTHIS:
					
					MOV BL, 255
					CALL DRAWCHAR
					LOOP LOOPTHIS
					
					MOV BL, 201
					CALL DRAWCHAR
					
					INC DH
					CALL GOTOXY
					MOV BL, 200
					CALL DRAWCHAR
					MOV BL, 187
					CALL DRAWCHAR
					MOV BL, 255
					CALL DRAWCHAR
					MOV BL, 186
					CALL DRAWCHAR
					
					INC DH
					INC DL
					CALL GOTOXY
					MOV BL, 200
					CALL DRAWCHAR
					MOV BL, 187
					CALL DRAWCHAR
					
					MOV BL, 186
					CALL DRAWCHAR
					
					INC DH
					INC DL
					CALL GOTOXY
					MOV BL, 200
					CALL DRAWCHAR
				
					MOV BL, 188
					CALL DRAWCHAR
					
					POP DX
					RET
DRAWSUDOKUBOYBUBBLE		ENDP

DRAWBUTTONSPUZZLESELECTION	PROC
					; DRAWS EASY BUTTON
					MOV DH, 5
					MOV DL, 4
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 7
					MOV SI, OFFSET TXTEASY
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS MEDIUM BUTTON
					ADD DH, 2
					SUB DL, 7	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 6
					MOV SI, OFFSET TXTMEDIUM
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS HARD BUTTON
					ADD DH, 2
					SUB DL, 6	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 7
					MOV SI, OFFSET TXTHARD
					MOV BL, 3FH
					CALL DRAWTEXT					
					
					; DRAWS MAINMENU BUTTON
					ADD DH, 6
					SUB DL, 7	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 4
					MOV SI, OFFSET TXTMAINMENU
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS MAINMENU BUTTON
					SUB DH, 4
					SUB DL, 4	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 4
					MOV SI, OFFSET TXTHIGHSCORES
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS NEXT PUZZLE BUTTON
					MOV DH, 5
					MOV DL, 61
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 3
					MOV SI, OFFSET TXTNEXTPUZZLE
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS PREVIOUS PUZZLE BUTTON
					ADD DH, 2
					SUB DL, 3	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 3
					MOV SI, OFFSET TXTPREVPUZZLE
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS USE PUZZLE BUTTON
					ADD DH, 4
					SUB DL, 3	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 3
					MOV SI, OFFSET TXTUSEPUZZLE
					MOV BL, 3FH
					CALL DRAWTEXT
					
					RET
DRAWBUTTONSPUZZLESELECTION	ENDP


DRAWBUTTONSGAME			PROC
					; DRAWS HELPME GAME BUTTON
					MOV DH, 5
					MOV DL, 4
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 5
					MOV SI, OFFSET TXTHELPME
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS GIVE UP BUTTON
					ADD DH, 2
					SUB DL, 5	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 5
					MOV SI, OFFSET TXTGIVEUP
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS RESTART BUTTON
					ADD DH, 3
					SUB DL, 5	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 6
					MOV SI, OFFSET TXTRESET
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS NEWPUZZLE BUTTON
					ADD DH, 2
					SUB DL, 6	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 4
					MOV SI, OFFSET TXTNEWPUZZLE
					MOV BL, 3FH
					CALL DRAWTEXT
					
					; DRAWS MAINMENU BUTTON
					ADD DH, 2
					SUB DL, 4	
					CALL DRAWBUTTONGRAPHIC
					INC DH
					ADD DL, 4
					MOV SI, OFFSET TXTMAINMENU
					MOV BL, 3FH
					CALL DRAWTEXT
					
					
					RET
DRAWBUTTONSGAME			ENDP
					
DRAWTEXT			PROC
					PUSH DX
	LOOPDRAWTEXT:	
					CALL GOTOXY		
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDDRAWTEXT		
					MOV AH, 9
					MOV AL, [SI]
					MOV BH, 0
					; MOV BL, 3FH
					MOV CX, 1
					INT 10H	
					
					INC SI
					INC DL
					JMP LOOPDRAWTEXT
	ENDDRAWTEXT:						
					POP DX						
					RET
DRAWTEXT			ENDP

DRAWBUTTONGRAPHIC		PROC
					PUSH DX
					CALL GOTOXY
					MOV BL, 201
					CALL DRAWCHAR
					MOV CX, 15
	LOOPDRAWBUTTON:
					MOV BL, 205
					CALL DRAWCHAR
					LOOP LOOPDRAWBUTTON
					
					MOV BL, 187
					CALL DRAWCHAR
					
					INC DH
					CALL GOTOXY
					MOV BL, 186
					CALL DRAWCHAR
					
					ADD DL, 16
					CALL GOTOXY
					MOV BL, 186
					CALL DRAWCHAR
					
					INC DH		
					SUB DL, 16
					CALL GOTOXY
					MOV BL, 200
					CALL DRAWCHAR
					MOV CX, 15
	LOOPDRAWBUTTON2:
					MOV BL, 205
					CALL DRAWCHAR
					LOOP LOOPDRAWBUTTON2
					
					MOV BL, 188
					CALL DRAWCHAR				
					POP DX
					RET
DRAWBUTTONGRAPHIC		ENDP

DRAWCHAR			PROC
					; DRAWS CHARACTER, REQUIRES BL FOR THE CHARACTER TO BE DISPLAYED
					PUSH DX
					MOV AH, 2
					MOV DL, BL
					INT 21H
					POP DX
					RET
DRAWCHAR			ENDP

DRAWBACKGROUND			PROC
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 03FH
					MOV CX, 2000
					INT 10H
					
					MOV DH, 0
					MOV DL, 24
					MOV CX, 25
	LOOPDRAWBGPLAYAREA:
					PUSH CX
					CALL GOTOXY
					MOV AH, 9
					MOV AL, 255
					MOV BH, 0
					MOV BL, 00FH
					MOV CX, 35
					INT 10H
					POP CX
					INC DH
					LOOP LOOPDRAWBGPLAYAREA
					
					RET
DRAWBACKGROUND			ENDP

DISPLAYVALUES			PROC
					MOV BX, 866			; SET POSITION FOR VIDEO MEMORY
					MOV SI, OFFSET ROW1
					CALL WRITEROW
					
					MOV BX, 1186
					MOV SI, OFFSET ROW2
					CALL WRITEROW
					
					MOV BX, 1506								
					MOV SI, OFFSET ROW3
					CALL WRITEROW
					
					MOV BX, 1826
					MOV SI, OFFSET ROW4
					CALL WRITEROW
					
					MOV BX, 2146								
					MOV SI, OFFSET ROW5
					CALL WRITEROW
					
					MOV BX, 2466							
					MOV SI, OFFSET ROW6
					CALL WRITEROW
					
					MOV BX, 2786
					MOV SI, OFFSET ROW7
					CALL WRITEROW
					
					MOV BX, 3106
					MOV SI, OFFSET ROW8
					CALL WRITEROW
					
					MOV BX, 3426
					MOV SI, OFFSET ROW9
					CALL WRITEROW
					
					RET
DISPLAYVALUES			ENDP

WRITEROW			PROC

	LOOPWRITE:			
					MOV AL, [SI]
					CMP AL, "$"
					JE ENDWRITEROW
					ADD AL, 30H
					MOV AH, 0FH
					
					INC SI
					
					MOV DL, CHOICEDISPLAYALLVALUES
					CMP DL, 2
					JE HAVEITDISPLAYED
					
					MOV DL, [SI]
					CMP DL, "n"
					JE DONTWRITE
	HAVEITDISPLAYED:
					
					MOV DL, GAMEMODE		
					CMP DL, 2			; IF GAME MODE IS NOT WORDOKU
					JNE NOTWORDOKU
					
					ADD AL, 16
					
	NOTWORDOKU:
					MOV ES:[BX], AX
					;CALL WRITENUMBER
					INC SI
					ADD BX, 4
					;CALL GOTOXY
					JMP LOOPWRITE
					
	DONTWRITE:
					INC SI
					ADD BX, 4
					JMP LOOPWRITE
	ENDWRITEROW:
					RET
WRITEROW			ENDP

DELAY 				PROC
					PUSH BX
					PUSH CX
					PUSH DX
					MOV BX, 13
					mov cx,BX
					mov dx,3dah
					loop11:
					push cx
					l1:
					in al,dx
					and al,08h
					jnz l1
					l2:
					in al,dx
					and al,08h
					jz l2
					pop cx
					loop loop11
					POP DX
					POP CX
					POP BX
					RET
DELAY				ENDP

WRITENUMBER			PROC
					PUSH CX
					MOV AH, 9			; WRITE CHAR / ATTRIBUTE
					MOV AL, [SI]			; CHARACTER TO DISPLAY
					ADD AL, 30H
					MOV BH, 0			; VIDEOPAGE 0
					MOV BL, 0FH			; COLOR
					; OR BL, 10000000B		; SET BLINK/INTENSITY BIT
					MOV CX, 1
					INT 10H
					POP CX
					RET
WRITENUMBER			ENDP

DISPLAYPLAYAREA			PROC
					MOV DH, 4
					MOV DL, 32
					CALL GOTOXY
					CALL PRINTTOP
				
					MOV DH, 5
					MOV DL, 32
					CALL GOTOXY
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 6
					MOV DL, 32
					CALL GOTOXY
					CALL PRINTROWFORNONNUMBERSSINGLE
					
					MOV DH, 7
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 8
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNONNUMBERSSINGLE
					
					MOV DH, 9
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 10
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNONNUMBERSDOUBLE
					
					MOV DH, 11
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 12
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNONNUMBERSSINGLE
					
					MOV DH, 13
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 14
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNONNUMBERSSINGLE
					
					MOV DH, 15
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 16
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNONNUMBERSDOUBLE
					
					MOV DH, 17
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 18
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNONNUMBERSSINGLE
					
					MOV DH, 19
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 20
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNONNUMBERSSINGLE
					
					MOV DH, 21
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTROWFORNUMBERS
					
					MOV DH, 22
					MOV DL, 32
					CALL GOTOXY					
					CALL PRINTBOTTOM
					
					RET
DISPLAYPLAYAREA			ENDP

PRINTTOP		 	PROC
					MOV AH, 02			; PRINTS THE UPPER LEFT CORNER
					MOV DX, 201
					INT 21H
					
					MOV CX, 17
					XOR BL, BL			; AL WOULD SERVE AS INDICATOR
	
	LOOP1:	
					CMP BL, 0
					JE VACANT1
					CMP BL, 1
					JE SINGLE1
					CMP BL, 2
					JE VACANT1
					CMP BL, 3
					JE SINGLE1
					CMP BL, 4
					JE VACANT1
					; DOUBLE
					MOV AH, 02
					MOV DX, 203
					INT 21H
					XOR BL, BL
					LOOP LOOP1
					JMP ENDLOOP1
	SINGLE1:				
					MOV AH, 02
					MOV DX, 209
					INT 21H
					INC BL
					LOOP LOOP1
					JMP ENDLOOP1
	VACANT1:
					MOV AH, 02
					MOV DX, 205
					INT 21H
					INC BL
					LOOP LOOP1
	ENDLOOP1:
					MOV AH, 02
					MOV DX, 187
					INT 21H
					RET
PRINTTOP			ENDP

PRINTBOTTOM		 	PROC
					MOV AH, 02
					MOV DX, 200
					INT 21H
					
					MOV CX, 17
					XOR BL, BL		; AL WOULD SERVE AS INDICATOR
	
	LOOP5:	
					CMP BL, 0
					JE VACANT5
					CMP BL, 1
					JE SINGLE5
					CMP BL, 2
					JE VACANT5
					CMP BL, 3
					JE SINGLE5
					CMP BL, 4
					JE VACANT5
					; DOUBLE
					MOV AH, 02
					MOV DX, 202
					INT 21H
					XOR BL, BL
					LOOP LOOP5
					JMP ENDLOOP5
	SINGLE5:				
					MOV AH, 02
					MOV DX, 207
					INT 21H
					INC BL
					LOOP LOOP5
					JMP ENDLOOP5
	VACANT5:
					MOV AH, 02
					MOV DX, 205
					INT 21H
					INC BL
					LOOP LOOP5
	ENDLOOP5:
					MOV AH, 02
					MOV DX, 188
					INT 21H
					
					RET
PRINTBOTTOM			ENDP
					
PRINTROWFORNONNUMBERSSINGLE	PROC
					MOV AH, 02
					MOV DX, 199
					INT 21H
					
					MOV CX, 17
					MOV BL, 0
	LOOP3:	
					CMP BL, 0
					JE VACANT3
					CMP BL, 1
					JE SINGLE3
					CMP BL, 2
					JE VACANT3
					CMP BL, 3
					JE SINGLE3
					CMP BL, 4
					JE VACANT3
					; DOUBLE
					MOV AH, 02
					MOV DX, 215
					INT 21H
					XOR BL, BL
					LOOP LOOP3
					JMP ENDLOOP3
	SINGLE3:				
					MOV AH, 02
					MOV DX, 197
					INT 21H
					INC BL
					LOOP LOOP3
					JMP ENDLOOP3
	VACANT3:
					MOV AH, 02
					MOV DX, 196
					INT 21H
					INC BL
					LOOP LOOP3
	ENDLOOP3:
					MOV AH, 02
					MOV DX, 182
					INT 21H
					
					RET
PRINTROWFORNONNUMBERSSINGLE	ENDP

PRINTROWFORNONNUMBERSDOUBLE	PROC
					MOV AH, 02
					MOV DX, 204
					INT 21H
					
					MOV CX, 17
					MOV BL, 0
	LOOP4:	
					CMP BL, 0
					JE VACANT4
					CMP BL, 1
					JE SINGLE4
					CMP BL, 2
					JE VACANT4
					CMP BL, 3
					JE SINGLE4
					CMP BL, 4
					JE VACANT4
					; DOUBLE
					MOV AH, 02
					MOV DX, 206
					INT 21H
					XOR BL, BL
					LOOP LOOP4
					JMP ENDLOOP4
	SINGLE4:				
					MOV AH, 02
					MOV DX, 216
					INT 21H
					INC BL
					LOOP LOOP4
					JMP ENDLOOP4
	VACANT4:
					MOV AH, 02
					MOV DX, 205
					INT 21H
					INC BL
					LOOP LOOP4
	ENDLOOP4:
					MOV AH, 02
					MOV DX, 185
					INT 21H
					
					RET
PRINTROWFORNONNUMBERSDOUBLE	ENDP

PRINTROWFORNUMBERS	 	PROC
					MOV AH, 02
					MOV DX, 186
					INT 21H
					
					MOV CX, 18
					MOV BL, 0
	LOOP2:	
					CMP BL, 0
					JE VACANT2
					CMP BL, 1
					JE SINGLE2
					CMP BL, 2
					JE VACANT2
					CMP BL, 3
					JE SINGLE2
					CMP BL, 4
					JE VACANT2
					; DOUBLE
					MOV AH, 02
					MOV DX, 186
					INT 21H
					XOR BL, BL
					LOOP LOOP2
					JMP ENDLOOP2
	SINGLE2:				
					MOV AH, 02
					MOV DX, 179
					INT 21H
					INC BL
					LOOP LOOP2
					JMP ENDLOOP2
	VACANT2:
					MOV AH, 02
					MOV DX, 255
					INT 21H
					INC BL
					LOOP LOOP2
	ENDLOOP2:
					RET
PRINTROWFORNUMBERS		ENDP

DRAWSTARTTIME			PROC
					MOV DH, 2
					MOV DL, 7
					CALL GOTOXY
					MOV AH, 9
					MOV DX, OFFSET MSGTIMESTARTED
					INT 21H
					
					MOV DH, 3
					MOV DL, 8
					CALL GOTOXY
					
					MOV DI, OFFSET TIMESTARTED
					CALL GETTIME
					CALL OUTPUTTIME
					RET
DRAWSTARTTIME			ENDP

GETTIME				PROC
					
					MOV AH, 2CH
					INT 21H
					
					MOV [DI], CH
					INC DI
					MOV [DI], CL
					INC DI
					MOV [DI], DH
					RET
GETTIME				ENDP

OUTPUTTIME			PROC
					PUSH DX
					
					MOV DL, 255		; DISPLAY SPACE
					MOV AH, 2
					INT 21H

					; FOR HOURS
					XOR AX, AX
					CMP CH, 19
					JG MINUS20
					CMP CH, 9
					JG MINUS10
					JMP SINGLES
	MINUS20:
					MOV AL, 32H
					SUB CH, 20
					JMP DISPLAYHOUR
	MINUS10:
					MOV AL, 31H
					SUB CH, 10
					JMP DISPLAYHOUR
	SINGLES:
					MOV AL, 30H
					JMP DISPLAYHOUR
	DISPLAYHOUR:
					CMP CH, 10
					JNE DONOTMAKEZERO2
					MOV CH, 0
					INC AL
	DONOTMAKEZERO2:
					MOV AH, 02
					MOV DL, AL
					INT 21H
					
					MOV AH, 02
					MOV DL, CH
					ADD DL, 30H
					INT 21H			
					
					MOV DL, 3AH			; DISPLAY COLON
					MOV AH, 2
					INT 21H				
					
					;FOR MINUTES
					XOR AX, AX
					CMP CL, 60
					JE CONVERTTOZERO
					CMP CL, 50
					JG CONVERT50S
					CMP CL, 40
					JG CONVERT40S
					CMP CL, 30
					JG CONVERT30S
					CMP CL, 20
					JG CONVERT20S
					CMP CL, 10
					JG CONVERT10S
					JMP SINGLEDIGIT1
	CONVERTTOZERO:
					MOV AL, 30H
					MOV CL, 0
					JMP DISPLAYMINUTES
	CONVERT50S:
					MOV AL, 35H
					SUB CL, 50
					JMP DISPLAYMINUTES
	CONVERT40S:
					MOV AL, 34H
					SUB CL, 40
					JMP DISPLAYMINUTES
	CONVERT30S:
					MOV AL, 33H
					SUB CL, 30
					JMP DISPLAYMINUTES
	CONVERT20S:
					MOV AL, 32H
					SUB CL, 20
					JMP DISPLAYMINUTES
	CONVERT10S:
					MOV AL, 31H
					SUB CL, 10
					JMP DISPLAYMINUTES
	SINGLEDIGIT1:
					MOV AL, 30H
					JMP DISPLAYMINUTES
	DISPLAYMINUTES:	
		
					CMP CL, 10
					JNE DONOTMAKEZERO1
					MOV CL, 0
					INC AL
	DONOTMAKEZERO1:								
					MOV AH, 02
					MOV DL, AL
					INT 21H
										
					MOV AH, 02
					MOV DL, CL
					ADD DL, 30H
					INT 21H			
					
					MOV DL, 3AH			; DISPLAY COLON
					MOV AH, 2
					INT 21H		
					
					POP DX
					; FOR SECONDS
					XOR AX, AX
					CMP DH, 60
					JE CONVERTTOZERO1
					CMP DH, 50
					JG CONVERT50S1
					CMP DH, 40
					JG CONVERT40S1
					CMP DH, 30
					JG CONVERT30S1
					CMP DH, 20
					JG CONVERT20S1
					CMP DH, 10
					JG CONVERT10S1			
					
					JMP SINGLEDIGIT2
	CONVERTTOZERO1:
					MOV AL, 30H
					MOV DH, 0
					JMP DISPLAYSECONDS
	CONVERT50S1:
					MOV AL, 35H
					SUB DH, 50
					JMP DISPLAYSECONDS
	CONVERT40S1:
					MOV AL, 34H
					SUB DH, 40
					JMP DISPLAYSECONDS
	CONVERT30S1:
					MOV AL, 33H
					SUB DH, 30
					JMP DISPLAYSECONDS
	CONVERT20S1:
					MOV AL, 32H
					SUB DH, 20
					JMP DISPLAYSECONDS
	CONVERT10S1:
					MOV AL, 31H
					SUB DH, 10
					JMP DISPLAYSECONDS
	SINGLEDIGIT2:
					MOV AL, 30H
					JMP DISPLAYSECONDS
	DISPLAYSECONDS:					
					
					CMP DH, 10
					JNE DONOTMAKEZERO
					MOV DH, 0
					INC AL
	DONOTMAKEZERO:
					PUSH DX
					
					MOV AH, 02
					MOV DL, AL
					INT 21H
					
					POP DX				
					
					MOV AH, 02
					MOV DL, DH
					ADD DL, 30H
					INT 21H			
					
					RET
OUTPUTTIME			ENDP

RANDOM 				PROC
					; THIS PROCEDURE TAKES A RANDOM NUMBER FROM 1-9 WHICH IS USED TO POPULATE THE GRID
					; BH IS MAXIMUM GENERATED NUMBER
					; RANDOMIZATION IS DONE BY TAKING THE CURRENT TIME IN SECONDS AND HUNDREDTHS AND COUNTING FROM 1-9
					PUSH AX
					PUSH CX
					PUSH DX
					INC BH			
					MOV AH, 2CH		; GET TIME
					INT 21H
					MOV AH, 02
					
					;ADD DL, 30H		; DISPLAY DH=SECONDS, DL=HUNDREDTHS
					;ADD DH, 30H
					;INT 21H
					
					XOR CX, CX						
					XOR BL, BL		; BX WILL SERVE AS POINTER
					MOV BL, 1		; SET TO ONE
					MOV CX, DX		; SET COUNTER
	LOOPRANDOMIZER:
					INC BL							
					CMP BL, BH
					JE SETTOONE		; IF COUNT REACHES MAXIMUM NUMBER, SET IT BACK TO ONE
					LOOP LOOPRANDOMIZER
					JMP ENDLOOPRANDOMIZER
	SETTOONE:
					MOV BL, 1
					LOOP LOOPRANDOMIZER
	ENDLOOPRANDOMIZER:
					; BL WOULD BE THE FINAL GENERATED NUMBER
					POP DX
					POP CX
					POP AX
					RET
RANDOM				ENDP

GOTOXY				PROC
					MOV AH, 2
					MOV BH, 0
					INT 10H
					RET
GOTOXY				ENDP

CLRSCR				PROC
					PUSH AX
					PUSH BX
					PUSH CX
					PUSH DX
					MOV AX, 0600H
					MOV CX, 0
					MOV DX, 184FH
					MOV BH, 7
					INT 10H
					MOV AH, 2
					MOV BH, 0
					MOV DX, 0
					INT 10H
					POP DX
					POP CX
					POP BX
					POP AX
					RET
CLRSCR				ENDP

ENDPROGRAM			PROC
					MOV DI, OFFSET CANENDPROG
					MOV AH, 1
					MOV [DI], AH
					RET
ENDPROGRAM			ENDP

					END MAIN
